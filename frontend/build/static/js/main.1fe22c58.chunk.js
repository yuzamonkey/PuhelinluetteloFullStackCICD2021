(this.webpackJsonpfrontend = this.webpackJsonpfrontend || []).push([[0], { 38: function (e, n, t) {}, 39: function (e, n, t) { 'use strict'; t.r(n); const c = t(2); const r = t.n(c); const a = t(14); const u = t.n(a); const o = t(3); const i = t(0); const s = function (e) { const n = e.text; return Object(i.jsx)('h2', { children: n }) }; const l = function (e) { const n = e.persons; const t = e.filter; const c = e.removePerson; return Object(i.jsx)('div', { children: Object(i.jsx)('ul', { children: n.map(function (e) { return e.name.toLowerCase().includes(t.toLowerCase()) ? Object(i.jsxs)('p', { children: [e.name, ' ', e.number, Object(i.jsx)('button', { type: 'button', onClick: c, value: e.id, children: 'delete' })] }, e.id) : Object(i.jsx)('p', {}) }) }) }) }; const d = function (e) { const n = e.handleFilterChange; return Object(i.jsxs)('div', { children: ['filter shown with', Object(i.jsx)('input', { onChange: n })] }) }; const j = function (e) { const n = e.addPerson; const t = e.newName; const c = e.handleNameChange; const r = e.newNumber; const a = e.handleNumberChange; return Object(i.jsx)('div', { children: Object(i.jsxs)('form', { onSubmit: n, children: [Object(i.jsxs)('div', { children: ['name:', Object(i.jsx)('input', { value: t, onChange: c }), ' ', Object(i.jsx)('br', {}), 'number:', Object(i.jsx)('input', { value: r, onChange: a })] }), Object(i.jsx)('div', { children: Object(i.jsx)('button', { type: 'submit', children: 'add' }) })] }) }) }; const b = function (e) { const n = e.message; return n === null ? null : Object(i.jsx)('div', { className: 'successNotification', children: n }) }; const f = function (e) { const n = e.message; return n === null ? null : Object(i.jsx)('div', { className: 'errorNotification', children: n }) }; const m = t(4); const h = t.n(m); const O = '/api/persons'; const v = function () { return h.a.get(O) }; const x = function (e) { return h.a.post(O, e) }; const p = function (e, n) { return h.a.put(''.concat(O, '/').concat(e), n) }; const g = function (e) { return h.a.delete(''.concat(O, '/').concat(e)) }; const N = (t(38), function () { const e = Object(c.useState)([]); const n = Object(o.a)(e, 2); const t = n[0]; const r = n[1]; const a = Object(c.useState)(''); const u = Object(o.a)(a, 2); const m = u[0]; const h = u[1]; const O = Object(c.useState)(''); const N = Object(o.a)(O, 2); const w = N[0]; const C = N[1]; const S = Object(c.useState)(''); const k = Object(o.a)(S, 2); const y = k[0]; const D = k[1]; const P = Object(c.useState)(null); const T = Object(o.a)(P, 2); const I = T[0]; const E = T[1]; const F = Object(c.useState)(null); const J = Object(o.a)(F, 2); const L = J[0]; const B = J[1]; Object(c.useEffect)(function () { v().then(function (e) { r(e.data) }) }, []); return Object(i.jsxs)('div', { children: [Object(i.jsx)(s, { text: 'Phonebook (for part 11 CI/CD)' }), Object(i.jsx)(b, { message: I }), Object(i.jsx)(f, { message: L }), Object(i.jsx)(d, { handleFilterChange: function (e) { D(e.target.value) } }), Object(i.jsx)(s, { text: 'add new person' }), Object(i.jsx)(j, { addPerson: function (e) { if (e.preventDefault(), t.map(function (e) { return e.name }).includes(m)) { if (window.confirm(''.concat(m, ' is already added to phonebook, replace the old number with a new one?'))) { const n = t.find(function (e) { return e.name === m }); const c = { name: n.name, number: w }; p(n.id, c).then(function (e) { console.log('update response', e); const a = t.map(function (e) { return n.id === e.id ? c : e }); r(a), E('Number changed for '.concat(m)), setTimeout(function () { E(null) }, 5e3) }).catch(function (e) { const n = t.filter(function (e) { return e.name !== m }); r(n), B('Information of '.concat(m, ' has already removed from server')), setTimeout(function () { B(null) }, 5e3) }), h(''), C('') } } else x({ name: m, number: w }).then(function (e) { r(t.concat(e.data)), h(''), C(''), E(''.concat(m, ' added')), setTimeout(function () { E(null) }, 5e3) }).catch(function (e) { B(e.response.data.error), setTimeout(function () { B(null) }, 5e3) }) }, newName: m, handleNameChange: function (e) { h(e.target.value) }, newNumber: w, handleNumberChange: function (e) { C(e.target.value) } }), Object(i.jsx)(s, { text: 'Numbers' }), Object(i.jsx)(l, { persons: t, filter: y, removePerson: function (e) { e.preventDefault(); const n = e.target.value; const c = t.find(function (e) { return Number(e.id) === Number(n) }); window.confirm('Delete '.concat(c.name)) && g(n).then(function (e) { const a = t.filter(function (e) { return Number(e.id) !== Number(n) }); r(a), h(''), C(''), E('Deleted '.concat(c.name)), setTimeout(function () { E(null) }, 5e3) }) } })] }) }); u.a.render(Object(i.jsx)(r.a.StrictMode, { children: Object(i.jsx)(N, {}) }), document.getElementById('root')) } }, [[39, 1, 2]]])
// # sourceMappingURL=main.1fe22c58.chunk.js.map
